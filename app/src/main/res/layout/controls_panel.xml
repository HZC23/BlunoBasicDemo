<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <data>
        <variable
            name="viewModel"
            type="com.hzc.nonocontroller.viewmodel.MainViewModel" />
    </data>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:padding="8dp">

        <!-- Speed Control Card -->
        <com.google.android.material.card.MaterialCardView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:cardBackgroundColor="@color/surface"
            app:strokeWidth="0dp"
            app:cardCornerRadius="8dp"
            android:layout_marginBottom="16dp">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="16dp">

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="Speed Control"
                    android:textAppearance="?attr/textAppearanceSubtitle1"
                    android:textColor="@color/text_primary" />

                <SeekBar
                    android:id="@+id/speedSlider"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="8dp"
                    android:max="255"
                    android:onStopTrackingTouch="@{(seekBar) -> viewModel.onSpeedChanged(seekBar.getProgress())}"
                    android:progress="@{viewModel.telemetry.speedTarget}"
                    android:thumbTint="@color/colorAccent"
                    android:progressTint="@color/colorAccent"
                    android:minHeight="30dp"
                    android:maxHeight="30dp"/>

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="@{@string/speed_target_format(viewModel.telemetry.speedTarget)}"
                    android:textColor="@color/text_secondary"
                    android:layout_gravity="end"
                    tools:text="Speed: 128" />

            </LinearLayout>
        </com.google.android.material.card.MaterialCardView>

        <!-- Angle Control Card -->
        <com.google.android.material.card.MaterialCardView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:cardBackgroundColor="@color/surface"
            app:strokeWidth="0dp"
            app:cardCornerRadius="8dp"
            android:layout_marginBottom="16dp">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="16dp">

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="Go To Angle"
                    android:textAppearance="?attr/textAppearanceSubtitle1"
                    android:textColor="@color/text_primary" />

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="8dp"
                    android:orientation="horizontal"
                    android:gravity="center_vertical">

                    <com.google.android.material.textfield.TextInputEditText
                        android:id="@+id/gotoAngle"
                        android:layout_width="0dp"
                        android:layout_height="wrap_content"
                        android:layout_weight="1"
                        android:hint="Angle (0-359)"
                        android:inputType="number"
                        android:text="@={viewModel.gotoAngle}"
                        android:textColor="@color/text_primary"
                        android:backgroundTint="@color/colorAccent"
                        android:maxLines="1"
                        android:singleLine="true"/>

                    <Button
                        android:id="@+id/buttonGo"
                        style="@style/Widget.MaterialComponents.Button.TextButton"
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:onClick="@{() -> viewModel.onGoToAngle()}"
                        android:text="Go"
                        android:textColor="@color/colorAccent"
                        android:layout_marginStart="8dp"/>
                </LinearLayout>
            </LinearLayout>
        </com.google.android.material.card.MaterialCardView>

        <!-- Other Controls Card -->
        <com.google.android.material.card.MaterialCardView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:cardBackgroundColor="@color/surface"
            app:strokeWidth="0dp"
            app:cardCornerRadius="8dp">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="16dp">

                <com.google.android.material.switchmaterial.SwitchMaterial
                    android:id="@+id/lightSwitch"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:onCheckedChanged="@{(switch, isChecked) -> viewModel.onLightChanged(isChecked)}"
                    android:text="Robot Light"
                    android:textColor="@color/text_primary"
                    android:thumbTint="@color/colorAccent"
                    android:trackTint="@color/text_secondary"
                    android:paddingVertical="8dp"/>

                <Button
                    android:id="@+id/calibrateCompass"
                    style="@style/Widget.MaterialComponents.Button.OutlinedButton"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="16dp"
                    android:onClick="@{() -> viewModel.onCalibrateCompass()}"
                    android:text="Calibrate Compass"
                    android:textColor="@color/colorAccent"
                    app:strokeColor="@color/colorAccent"
                    android:layout_gravity="center_horizontal"/>

            </LinearLayout>
        </com.google.android.material.card.MaterialCardView>

    </LinearLayout>
</layout>
